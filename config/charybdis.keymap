#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

#define U_TAPPING_TERM 200

&mt {
    quick-tap-ms = <180>;
    flavor = "tap-preferred";
};

/ {
    chosen { zmk,matrix_transform = &default_transform; };
};

/ {
    combos {
        compatible = "zmk,combos";

        back {
            bindings = <&mkp MB4>;
            key-positions = <31 30>;
            layers = <0>;
        };

        forward {
            bindings = <&mkp MB5>;
            key-positions = <29 28>;
            layers = <0>;
        };

        middle-right {
            bindings = <&mkp MB3>;
            key-positions = <33 31>;
            layers = <0>;
        };

        middle-left {
            bindings = <&mkp MB3>;
            key-positions = <28 26>;
            layers = <0>;
        };

        delete {
            bindings = <&kp DELETE>;
            key-positions = <34 35>;
            layers = <0>;
        };

        lblu {
            bindings = <&tog 7>;
            key-positions = <24 25 26>;
        };

        rblu {
            bindings = <&tog 7>;
            key-positions = <33 34 35>;
        };

        f9 {
            bindings = <&kp F8>;
            key-positions = <37 40>;
        };

        left_lclk {
            bindings = <&mkp LCLK>;
            key-positions = <28 27>;
        };

        right_lclk {
            bindings = <&mkp LCLK>;
            key-positions = <31 32>;
        };

        left_rclk {
            bindings = <&mkp RCLK>;
            key-positions = <27 26>;
        };

        right_rclk {
            bindings = <&mkp RCLK>;
            key-positions = <32 33>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <2 3>;
            require-prior-idle-ms = <60>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <8 9>;
            require-prior-idle-ms = <60>;
        };

        left_parenthesis {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <3 4>;
            require-prior-idle-ms = <30>;
        };

        right_parenthesis {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <7 8>;
            require-prior-idle-ms = <60>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <2 4>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <7 9>;
        };

        left_middle_click {
            bindings = <&mkp MCLK>;
            key-positions = <26 28>;
        };

        right_middle_click {
            bindings = <&mkp MCLK>;
            key-positions = <31 33>;
        };

        colon {
            bindings = <&kp COLON>;
            key-positions = <16 22>;
            timeout-ms = <80>;
        };

        alt_tab {
            bindings = <&kp LA(TAB)>;
            key-positions = <38 39>;
        };

        left_bracket_and_quotation {
            bindings = <&left_bracket_and_quotation>;
            key-positions = <2 3 4>;
        };

        quotation_and_right_bracket {
            bindings = <&quotation_and_right_bracket>;
            key-positions = <7 9 8>;
        };

        arraw {
            bindings = <&arraw>;
            key-positions = <15 16>;
            layers = <2>;
        };

        arraw_eq {
            bindings = <&arraw_eq>;
            key-positions = <3 4>;
            layers = <2>;
        };
    };

    macros {
        macro_e_s: macro_e_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp E &kp S>;
            label = "macro_e_s";
        };

        macro_l_i: macro_l_i {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp L &kp I>;
            label = "MACRO_L_I";
        };

        left_bracket_and_quotation: left_bracket_and_quotation {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LEFT_BRACKET &kp SQT>;
            label = "LEFT_BRACKET_AND_QUOTATION";
        };

        quotation_and_right_bracket: quotation_and_right_bracket {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp SQT &kp RIGHT_BRACKET>;
            label = "QUOTATION_AND_RIGHT_BRACKET";
        };

        arraw: arraw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GREATER_THAN>;
            label = "ARRAW";
        };

        arraw_eq: arraw_eq {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "ARRAW_EQ";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        BASE {
            bindings = <
&kp GRAVE       &kp Q       &kp W       &kp E             &kp R         &kp T        &kp Y        &kp U         &kp I        &kp O       &kp P               &kp BSPC
&kp ESC         &mt LWIN A  &mt LALT S  &mt LCTRL D       &mt LSHIFT F  &kp G        &kp H        &mt RSHIFT J  &mt RCTRL K  &mt RALT L  &mt RWIN SEMICOLON  &kp APOS
&kp LEFT_SHIFT  &lt 5 Z     &kp X       &kp C             &kp V         &kp B        &kp N        &lt 2 M       &kp COMMA    &kp DOT     &lt 5 SLASH         &kp EQUAL
                                        &lt 1 UNDERSCORE  &kp SPACE     &lt 3 TAB    &lt 4 ENTER  &kp SPACE
            >;

            label = "Corne";
        };

        arrow_media {
            bindings = <
&kp GRAVE  &none      &none      &none      &none      &none        &none       &kp C_VOL_DN  &kp C_VOL_UP  &none      &none           &kp BSPC
&kp ESC    &kp LGUI   &kp LALT   &kp LCTRL  &kp LSHFT  &none        &kp LEFT    &kp DOWN      &kp UP        &kp RIGHT  &mt HOME PG_UP  &kp ENTER
&kp LSHFT  &kp LC(Z)  &kp LC(X)  &kp LC(C)  &kp LC(V)  &kp LC(F)    &kp C_MUTE  &kp C_PREV    &kp C_NEXT    &kp C_PP   &mt END PG_DN   &kp DELETE
                                 &kp LCTRL  &kp SPACE  &trans       &kp ENTER   &kp SPACE
            >;

            label = "HJKL_media";
        };

        symbols {
            bindings = <
&kp CARET  &kp AMPERSAND    &kp AT_SIGN     &kp POUND             &kp DOLLAR        &kp PERCENT       &trans  &trans     &trans     &trans    &trans    &kp BSPC
&kp TILDE  &kp EXCLAMATION  &kp ASTRK       &kp MINUS             &kp EQUAL         &kp UNDERSCORE    &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &kp ENTER
&kp BSLH   &kp LESS_THAN    &kp LEFT_BRACE  &kp LEFT_PARENTHESIS  &kp LEFT_BRACKET  &kp PIPE          &trans  &trans     &trans     &trans    &trans    &kp DELETE
                                            &kp UNDERSCORE        &kp SPACE         &kp PIPE          &trans  &trans
            >;

            label = "!@#$";
        };

        number {
            bindings = <
&kp GRAVE  &trans    &trans    &trans     &trans     &trans    &kp ASTERISK  &kp N7     &kp N8  &kp N9  &kp EQUAL  &kp BSPC
&kp ESC    &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans    &kp MINUS     &kp N4     &kp N5  &kp N6  &kp N0     &kp ENTER
&kp LSHFT  &trans    &trans    &trans     &trans     &trans    &kp PLUS      &kp N1     &kp N2  &kp N3  &kp FSLH   &kp DOT
                               &none      &none      &none     &kp RSHFT     &kp RCTRL
            >;

            label = "12345";
        };

        Fn {
            bindings = <
&none  &kp F12  &kp F11  &kp F10  &kp F9     &none             &trans  &trans     &trans     &trans    &trans    &kp BSPC
&none  &kp F4   &kp F3   &kp F2   &kp F1     &none             &trans  &kp RSHFT  &kp RCTRL  &kp RALT  &kp RGUI  &kp ENTER
&none  &kp F8   &kp F7   &kp F6   &kp F5     &none             &trans  &trans     &trans     &trans    &trans    &kp DELETE
                         &kp TAB  &kp SPACE  &kp UNDERSCORE    &trans  &trans
            >;

            label = "Fn";
        };

        SCROLL {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans
            >;
        };

        mouse {
            bindings = <
&none  &trans    &trans    &none      &none      &trans       &trans     &trans     &trans  &trans     &trans  &kp BACKSPACE
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &trans       &kp LEFT   &kp DOWN   &kp UP  &kp RIGHT  &trans  &trans
&none  &mo 5     &trans    &none      &none      &none        &kp DEL    &trans     &trans  &trans     &mo 5   &trans
                           &mkp MCLK  &mkp RCLK  &mkp LCLK    &kp ENTER  &kp ENTER
            >;
        };

        BULETOOTH {
            bindings = <
&bt BT_CLR  &bt BT_SEL 4  &bt BT_SEL 3  &bt BT_SEL 2  &bt BT_SEL 1  &bt BT_SEL 0    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none       &none         &none         &none         &bt BT_PRV    &none           &none         &bt BT_NXT    &none         &none         &none         &none
&sys_reset  &none         &none         &none         &none         &bootloader     &bootloader   &none         &none         &none         &none         &sys_reset
                                        &none         &none         &none           &none         &none
            >;
        };
    };
};
